@using PersonalWebsite.Models
@using PersonalWebsite.Services
@using PersonalWebsite.Components.Shared
@namespace Projects

<div id="projects" class="min-h-screen bg-background p-8">
    <div class="container mx-auto">
        <div class="flex flex-col items-center mb-12">
            <div class="flex items-center mb-2">
                <Icon FileName="projects" Width="48" Height="48" Class="text-accent1 mr-4" />
                <h1 class="font-secondary text-5xl text-text font-bold">Personal Projects</h1>
            </div>
        </div>

        <div class="mb-8">
            <ProjectFilter 
                SortOptions="@sortOptions"
                AvailableTypes="@availableTypes"
                OnSortChange="@HandleSortChange"
                OnTypeChange="@HandleTypeChange" />
        </div>

        <ProjectList Projects="@filteredProjects" />
    </div>
</div>

@code {
    private List<Project> filteredProjects = new List<Project>();
    private string currentSort = "Latest";
    private PrimaryCategory? currentType = null;
    private List<string> sortOptions = new List<string> { "Latest", "Oldest", "In Progress", "Completed" };
    private List<PrimaryCategory> availableTypes = new List<PrimaryCategory>();
    private bool shouldRerender = false;

    protected override void OnInitialized()
    {
        availableTypes = ProjectLoader.GetAvailablePrimaryCategories().ToList();
        UpdateFilteredProjects();
    }

    private void HandleSortChange(string sortOption)
    {
        currentSort = sortOption;
        UpdateFilteredProjects();
        shouldRerender = true;
        StateHasChanged();
    }

    private void HandleTypeChange(PrimaryCategory? type)
    {
        currentType = type;
        UpdateFilteredProjects();
        shouldRerender = true;
        StateHasChanged();
    }

    private void UpdateFilteredProjects()
    {
        filteredProjects = ProjectLoader.GetFilteredProjects(currentType, currentSort);
    }

    protected override bool ShouldRender()
    {
        if (shouldRerender)
        {
            shouldRerender = false;
            return true;
        }
        return base.ShouldRender();
    }
}